// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon.proto

#include "amazon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class AProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AProduct>
      _instance;
} _AProduct_default_instance_;
class AInitWarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AInitWarehouse>
      _instance;
} _AInitWarehouse_default_instance_;
class AConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AConnect>
      _instance;
} _AConnect_default_instance_;
class AConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AConnected>
      _instance;
} _AConnected_default_instance_;
class APackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APack>
      _instance;
} _APack_default_instance_;
class APutOnTruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APutOnTruck>
      _instance;
} _APutOnTruck_default_instance_;
class APurchaseMoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<APurchaseMore>
      _instance;
} _APurchaseMore_default_instance_;
class ACommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ACommands>
      _instance;
} _ACommands_default_instance_;
class AResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AResponses>
      _instance;
} _AResponses_default_instance_;
class AWarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AWarehouse>
      _instance;
} _AWarehouse_default_instance_;
class UConnectADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UConnectA>
      _instance;
} _UConnectA_default_instance_;
class AConnectUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AConnectU>
      _instance;
} _AConnectU_default_instance_;
class AGoodInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AGoodInfo>
      _instance;
} _AGoodInfo_default_instance_;
class UTruckMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UTruckMatch>
      _instance;
} _UTruckMatch_default_instance_;
class UTruckInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UTruckInfo>
      _instance;
} _UTruckInfo_default_instance_;
class A2UResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A2UResponses>
      _instance;
} _A2UResponses_default_instance_;
class U2AResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2AResponses>
      _instance;
} _U2AResponses_default_instance_;
namespace protobuf_amazon_2eproto {
void InitDefaultsAProductImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AProduct_default_instance_;
    new (ptr) ::AProduct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AProduct::InitAsDefaultInstance();
}

void InitDefaultsAProduct() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAProductImpl);
}

void InitDefaultsAInitWarehouseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AInitWarehouse_default_instance_;
    new (ptr) ::AInitWarehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AInitWarehouse::InitAsDefaultInstance();
}

void InitDefaultsAInitWarehouse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAInitWarehouseImpl);
}

void InitDefaultsAConnectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAInitWarehouse();
  {
    void* ptr = &::_AConnect_default_instance_;
    new (ptr) ::AConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AConnect::InitAsDefaultInstance();
}

void InitDefaultsAConnect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAConnectImpl);
}

void InitDefaultsAConnectedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AConnected_default_instance_;
    new (ptr) ::AConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AConnected::InitAsDefaultInstance();
}

void InitDefaultsAConnected() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAConnectedImpl);
}

void InitDefaultsAPackImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAProduct();
  {
    void* ptr = &::_APack_default_instance_;
    new (ptr) ::APack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APack::InitAsDefaultInstance();
}

void InitDefaultsAPack() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAPackImpl);
}

void InitDefaultsAPutOnTruckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_APutOnTruck_default_instance_;
    new (ptr) ::APutOnTruck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APutOnTruck::InitAsDefaultInstance();
}

void InitDefaultsAPutOnTruck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAPutOnTruckImpl);
}

void InitDefaultsAPurchaseMoreImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAProduct();
  {
    void* ptr = &::_APurchaseMore_default_instance_;
    new (ptr) ::APurchaseMore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::APurchaseMore::InitAsDefaultInstance();
}

void InitDefaultsAPurchaseMore() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAPurchaseMoreImpl);
}

void InitDefaultsACommandsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAPurchaseMore();
  protobuf_amazon_2eproto::InitDefaultsAPutOnTruck();
  protobuf_amazon_2eproto::InitDefaultsAPack();
  {
    void* ptr = &::_ACommands_default_instance_;
    new (ptr) ::ACommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ACommands::InitAsDefaultInstance();
}

void InitDefaultsACommands() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsACommandsImpl);
}

void InitDefaultsAResponsesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAPurchaseMore();
  {
    void* ptr = &::_AResponses_default_instance_;
    new (ptr) ::AResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AResponses::InitAsDefaultInstance();
}

void InitDefaultsAResponses() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAResponsesImpl);
}

void InitDefaultsAWarehouseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AWarehouse_default_instance_;
    new (ptr) ::AWarehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AWarehouse::InitAsDefaultInstance();
}

void InitDefaultsAWarehouse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAWarehouseImpl);
}

void InitDefaultsUConnectAImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UConnectA_default_instance_;
    new (ptr) ::UConnectA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UConnectA::InitAsDefaultInstance();
}

void InitDefaultsUConnectA() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUConnectAImpl);
}

void InitDefaultsAConnectUImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAWarehouse();
  {
    void* ptr = &::_AConnectU_default_instance_;
    new (ptr) ::AConnectU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AConnectU::InitAsDefaultInstance();
}

void InitDefaultsAConnectU() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAConnectUImpl);
}

void InitDefaultsAGoodInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAProduct();
  {
    void* ptr = &::_AGoodInfo_default_instance_;
    new (ptr) ::AGoodInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AGoodInfo::InitAsDefaultInstance();
}

void InitDefaultsAGoodInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAGoodInfoImpl);
}

void InitDefaultsUTruckMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UTruckMatch_default_instance_;
    new (ptr) ::UTruckMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UTruckMatch::InitAsDefaultInstance();
}

void InitDefaultsUTruckMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUTruckMatchImpl);
}

void InitDefaultsUTruckInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UTruckInfo_default_instance_;
    new (ptr) ::UTruckInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UTruckInfo::InitAsDefaultInstance();
}

void InitDefaultsUTruckInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUTruckInfoImpl);
}

void InitDefaultsA2UResponsesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsAGoodInfo();
  protobuf_amazon_2eproto::InitDefaultsUTruckInfo();
  {
    void* ptr = &::_A2UResponses_default_instance_;
    new (ptr) ::A2UResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::A2UResponses::InitAsDefaultInstance();
}

void InitDefaultsA2UResponses() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA2UResponsesImpl);
}

void InitDefaultsU2AResponsesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_amazon_2eproto::InitDefaultsUTruckInfo();
  protobuf_amazon_2eproto::InitDefaultsUTruckMatch();
  {
    void* ptr = &::_U2AResponses_default_instance_;
    new (ptr) ::U2AResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2AResponses::InitAsDefaultInstance();
}

void InitDefaultsU2AResponses() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsU2AResponsesImpl);
}

::google::protobuf::Metadata file_level_metadata[17];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AProduct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AProduct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AProduct, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AProduct, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AProduct, count_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AInitWarehouse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AInitWarehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AInitWarehouse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AInitWarehouse, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnect, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnect, initwh_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnected, error_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APack, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APack, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APack, things_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APack, shipid_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APutOnTruck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APutOnTruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APutOnTruck, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APutOnTruck, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APutOnTruck, shipid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APurchaseMore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APurchaseMore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APurchaseMore, whnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::APurchaseMore, things_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, load_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, topack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, simspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ACommands, disconnect_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, arrived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, ready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, loaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AResponses, finished_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AWarehouse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AWarehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AWarehouse, wid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AWarehouse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AWarehouse, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnectA, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnectA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnectA, worldid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnectU, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnectU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnectU, initwh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AConnectU, error_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, xdest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, ydest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, order_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AGoodInfo, good_),
  1,
  0,
  2,
  4,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckMatch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckMatch, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckMatch, goodid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckMatch, order_num_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckInfo, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruckInfo, whid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2UResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2UResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2UResponses, goodready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2UResponses, truckleave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2UResponses, error_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2AResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2AResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2AResponses, truckarrived_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2AResponses, packagefinished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2AResponses, truckready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2AResponses, error_),
  ~0u,
  ~0u,
  ~0u,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::AProduct)},
  { 11, 18, sizeof(::AInitWarehouse)},
  { 20, 27, sizeof(::AConnect)},
  { 29, 35, sizeof(::AConnected)},
  { 36, 44, sizeof(::APack)},
  { 47, 55, sizeof(::APutOnTruck)},
  { 58, 65, sizeof(::APurchaseMore)},
  { 67, 77, sizeof(::ACommands)},
  { 82, 92, sizeof(::AResponses)},
  { 97, 105, sizeof(::AWarehouse)},
  { 108, 114, sizeof(::UConnectA)},
  { 115, 122, sizeof(::AConnectU)},
  { 124, 135, sizeof(::AGoodInfo)},
  { 141, 149, sizeof(::UTruckMatch)},
  { 152, 159, sizeof(::UTruckInfo)},
  { 161, 169, sizeof(::A2UResponses)},
  { 172, 181, sizeof(::U2AResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AProduct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AInitWarehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APutOnTruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_APurchaseMore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ACommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AResponses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AWarehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UConnectA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AConnectU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AGoodInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UTruckMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UTruckInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_A2UResponses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2AResponses_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "amazon.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014amazon.proto\":\n\010AProduct\022\n\n\002id\030\001 \002(\003\022\023"
      "\n\013description\030\002 \002(\t\022\r\n\005count\030\003 \002(\005\"&\n\016AI"
      "nitWarehouse\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\"<\n\010AC"
      "onnect\022\017\n\007worldid\030\001 \002(\003\022\037\n\006initwh\030\002 \003(\0132"
      "\017.AInitWarehouse\"\033\n\nAConnected\022\r\n\005error\030"
      "\001 \001(\t\"A\n\005APack\022\r\n\005whnum\030\001 \002(\005\022\031\n\006things\030"
      "\002 \003(\0132\t.AProduct\022\016\n\006shipid\030\003 \002(\003\"=\n\013APut"
      "OnTruck\022\r\n\005whnum\030\001 \002(\005\022\017\n\007truckid\030\002 \002(\005\022"
      "\016\n\006shipid\030\003 \002(\003\"9\n\rAPurchaseMore\022\r\n\005whnu"
      "m\030\001 \002(\005\022\031\n\006things\030\002 \003(\0132\t.AProduct\"\202\001\n\tA"
      "Commands\022\033\n\003buy\030\001 \003(\0132\016.APurchaseMore\022\032\n"
      "\004load\030\002 \003(\0132\014.APutOnTruck\022\026\n\006topack\030\003 \003("
      "\0132\006.APack\022\020\n\010simspeed\030\004 \001(\r\022\022\n\ndisconnec"
      "t\030\005 \001(\010\"m\n\nAResponses\022\037\n\007arrived\030\001 \003(\0132\016"
      ".APurchaseMore\022\r\n\005ready\030\002 \003(\003\022\016\n\006loaded\030"
      "\003 \003(\003\022\r\n\005error\030\004 \001(\t\022\020\n\010finished\030\005 \001(\010\"/"
      "\n\nAWarehouse\022\013\n\003wid\030\001 \002(\005\022\t\n\001x\030\002 \002(\005\022\t\n\001"
      "y\030\003 \002(\005\"\034\n\tUConnectA\022\017\n\007worldid\030\001 \002(\003\"7\n"
      "\tAConnectU\022\033\n\006initwh\030\001 \003(\0132\013.AWarehouse\022"
      "\r\n\005error\030\002 \001(\t\"u\n\tAGoodInfo\022\014\n\004whid\030\001 \002("
      "\005\022\020\n\010username\030\002 \001(\t\022\r\n\005xdest\030\003 \002(\005\022\r\n\005yd"
      "est\030\004 \002(\005\022\021\n\torder_num\030\005 \002(\003\022\027\n\004good\030\006 \003"
      "(\0132\t.AProduct\"A\n\013UTruckMatch\022\017\n\007truckid\030"
      "\001 \002(\005\022\016\n\006goodid\030\002 \002(\003\022\021\n\torder_num\030\003 \002(\003"
      "\"+\n\nUTruckInfo\022\017\n\007truckid\030\001 \002(\005\022\014\n\004whid\030"
      "\002 \002(\005\"]\n\014A2UResponses\022\035\n\tgoodReady\030\001 \003(\013"
      "2\n.AGoodInfo\022\037\n\ntruckLeave\030\002 \003(\0132\013.UTruc"
      "kInfo\022\r\n\005error\030\003 \001(\t\"{\n\014U2AResponses\022!\n\014"
      "truckArrived\030\001 \003(\0132\013.UTruckInfo\022\027\n\017packa"
      "geFinished\030\002 \003(\003\022 \n\ntruckReady\030\003 \003(\0132\014.U"
      "TruckMatch\022\r\n\005error\030\004 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "amazon.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_amazon_2eproto

// ===================================================================

void AProduct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AProduct::kIdFieldNumber;
const int AProduct::kDescriptionFieldNumber;
const int AProduct::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AProduct::AProduct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAProduct();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AProduct)
}
AProduct::AProduct(const AProduct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:AProduct)
}

void AProduct::SharedCtor() {
  _cached_size_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(count_));
}

AProduct::~AProduct() {
  // @@protoc_insertion_point(destructor:AProduct)
  SharedDtor();
}

void AProduct::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AProduct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AProduct::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AProduct& AProduct::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAProduct();
  return *internal_default_instance();
}

AProduct* AProduct::New(::google::protobuf::Arena* arena) const {
  AProduct* n = new AProduct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:AProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*description_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&id_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AProduct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AProduct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AProduct.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AProduct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AProduct)
  return false;
#undef DO_
}

void AProduct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AProduct)
}

::google::protobuf::uint8* AProduct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AProduct)
  return target;
}

size_t AProduct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AProduct)
  size_t total_size = 0;

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t AProduct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AProduct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AProduct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AProduct)
  GOOGLE_DCHECK_NE(&from, this);
  const AProduct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AProduct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AProduct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AProduct)
    MergeFrom(*source);
  }
}

void AProduct::MergeFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AProduct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AProduct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AProduct::CopyFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AProduct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AProduct::Swap(AProduct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AProduct::InternalSwap(AProduct* other) {
  using std::swap;
  description_.Swap(&other->description_);
  swap(id_, other->id_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AProduct::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AInitWarehouse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AInitWarehouse::kXFieldNumber;
const int AInitWarehouse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AInitWarehouse::AInitWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAInitWarehouse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AInitWarehouse)
}
AInitWarehouse::AInitWarehouse(const AInitWarehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:AInitWarehouse)
}

void AInitWarehouse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

AInitWarehouse::~AInitWarehouse() {
  // @@protoc_insertion_point(destructor:AInitWarehouse)
  SharedDtor();
}

void AInitWarehouse::SharedDtor() {
}

void AInitWarehouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AInitWarehouse::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AInitWarehouse& AInitWarehouse::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAInitWarehouse();
  return *internal_default_instance();
}

AInitWarehouse* AInitWarehouse::New(::google::protobuf::Arena* arena) const {
  AInitWarehouse* n = new AInitWarehouse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AInitWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:AInitWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AInitWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AInitWarehouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AInitWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AInitWarehouse)
  return false;
#undef DO_
}

void AInitWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AInitWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AInitWarehouse)
}

::google::protobuf::uint8* AInitWarehouse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AInitWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AInitWarehouse)
  return target;
}

size_t AInitWarehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AInitWarehouse)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t AInitWarehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AInitWarehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AInitWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AInitWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const AInitWarehouse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AInitWarehouse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AInitWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AInitWarehouse)
    MergeFrom(*source);
  }
}

void AInitWarehouse::MergeFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AInitWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AInitWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AInitWarehouse::CopyFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AInitWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AInitWarehouse::Swap(AInitWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AInitWarehouse::InternalSwap(AInitWarehouse* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AInitWarehouse::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnect::kWorldidFieldNumber;
const int AConnect::kInitwhFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnect::AConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAConnect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnect)
}
AConnect::AConnect(const AConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      initwh_(from.initwh_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:AConnect)
}

void AConnect::SharedCtor() {
  _cached_size_ = 0;
  worldid_ = GOOGLE_LONGLONG(0);
}

AConnect::~AConnect() {
  // @@protoc_insertion_point(destructor:AConnect)
  SharedDtor();
}

void AConnect::SharedDtor() {
}

void AConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnect::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AConnect& AConnect::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAConnect();
  return *internal_default_instance();
}

AConnect* AConnect::New(::google::protobuf::Arena* arena) const {
  AConnect* n = new AConnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initwh_.Clear();
  worldid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AInitWarehouse initwh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_initwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnect)
  return false;
#undef DO_
}

void AConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initwh_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->initwh(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnect)
}

::google::protobuf::uint8* AConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initwh_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->initwh(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnect)
  return target;
}

size_t AConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }
  // repeated .AInitWarehouse initwh = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->initwh_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->initwh(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnect)
    MergeFrom(*source);
  }
}

void AConnect::MergeFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initwh_.MergeFrom(from.initwh_);
  if (from.has_worldid()) {
    set_worldid(from.worldid());
  }
}

void AConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnect::CopyFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->initwh())) return false;
  return true;
}

void AConnect::Swap(AConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnect::InternalSwap(AConnect* other) {
  using std::swap;
  initwh_.InternalSwap(&other->initwh_);
  swap(worldid_, other->worldid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnect::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AConnected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnected::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnected::AConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAConnected();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnected)
}
AConnected::AConnected(const AConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:AConnected)
}

void AConnected::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AConnected::~AConnected() {
  // @@protoc_insertion_point(destructor:AConnected)
  SharedDtor();
}

void AConnected::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnected::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AConnected& AConnected::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAConnected();
  return *internal_default_instance();
}

AConnected* AConnected::New(::google::protobuf::Arena* arena) const {
  AConnected* n = new AConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AConnected.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnected)
  return false;
#undef DO_
}

void AConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnected)
}

::google::protobuf::uint8* AConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string error = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnected)
  return target;
}

size_t AConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnected)
    MergeFrom(*source);
  }
}

void AConnected::MergeFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void AConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnected::CopyFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnected::IsInitialized() const {
  return true;
}

void AConnected::Swap(AConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnected::InternalSwap(AConnected* other) {
  using std::swap;
  error_.Swap(&other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnected::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void APack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APack::kWhnumFieldNumber;
const int APack::kThingsFieldNumber;
const int APack::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APack::APack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAPack();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APack)
}
APack::APack(const APack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    static_cast<size_t>(reinterpret_cast<char*>(&whnum_) -
    reinterpret_cast<char*>(&shipid_)) + sizeof(whnum_));
  // @@protoc_insertion_point(copy_constructor:APack)
}

void APack::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&shipid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whnum_) -
      reinterpret_cast<char*>(&shipid_)) + sizeof(whnum_));
}

APack::~APack() {
  // @@protoc_insertion_point(destructor:APack)
  SharedDtor();
}

void APack::SharedDtor() {
}

void APack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APack::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APack& APack::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAPack();
  return *internal_default_instance();
}

APack* APack::New(::google::protobuf::Arena* arena) const {
  APack* n = new APack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APack::Clear() {
// @@protoc_insertion_point(message_clear_start:APack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  things_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&shipid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whnum_) -
        reinterpret_cast<char*>(&shipid_)) + sizeof(whnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_things()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APack)
  return false;
#undef DO_
}

void APack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(static_cast<int>(i)), output);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APack)
}

::google::protobuf::uint8* APack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:APack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->things(static_cast<int>(i)), deterministic, target);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APack)
  return target;
}

size_t APack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APack)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  return total_size;
}
size_t APack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APack)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AProduct things = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->things_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->things(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APack)
  GOOGLE_DCHECK_NE(&from, this);
  const APack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APack)
    MergeFrom(*source);
  }
}

void APack::MergeFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  things_.MergeFrom(from.things_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000002u) {
      whnum_ = from.whnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APack::CopyFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APack::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APack::Swap(APack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APack::InternalSwap(APack* other) {
  using std::swap;
  things_.InternalSwap(&other->things_);
  swap(shipid_, other->shipid_);
  swap(whnum_, other->whnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APack::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void APutOnTruck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APutOnTruck::kWhnumFieldNumber;
const int APutOnTruck::kTruckidFieldNumber;
const int APutOnTruck::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APutOnTruck::APutOnTruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAPutOnTruck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APutOnTruck)
}
APutOnTruck::APutOnTruck(const APutOnTruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&whnum_, &from.whnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&shipid_) -
    reinterpret_cast<char*>(&whnum_)) + sizeof(shipid_));
  // @@protoc_insertion_point(copy_constructor:APutOnTruck)
}

void APutOnTruck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&whnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shipid_) -
      reinterpret_cast<char*>(&whnum_)) + sizeof(shipid_));
}

APutOnTruck::~APutOnTruck() {
  // @@protoc_insertion_point(destructor:APutOnTruck)
  SharedDtor();
}

void APutOnTruck::SharedDtor() {
}

void APutOnTruck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APutOnTruck::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APutOnTruck& APutOnTruck::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAPutOnTruck();
  return *internal_default_instance();
}

APutOnTruck* APutOnTruck::New(::google::protobuf::Arena* arena) const {
  APutOnTruck* n = new APutOnTruck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APutOnTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:APutOnTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&whnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&shipid_) -
        reinterpret_cast<char*>(&whnum_)) + sizeof(shipid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APutOnTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APutOnTruck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APutOnTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APutOnTruck)
  return false;
#undef DO_
}

void APutOnTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APutOnTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APutOnTruck)
}

::google::protobuf::uint8* APutOnTruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:APutOnTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 shipid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APutOnTruck)
  return target;
}

size_t APutOnTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APutOnTruck)
  size_t total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  return total_size;
}
size_t APutOnTruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APutOnTruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APutOnTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APutOnTruck)
  GOOGLE_DCHECK_NE(&from, this);
  const APutOnTruck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APutOnTruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APutOnTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APutOnTruck)
    MergeFrom(*source);
  }
}

void APutOnTruck::MergeFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APutOnTruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      whnum_ = from.whnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000004u) {
      shipid_ = from.shipid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APutOnTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APutOnTruck::CopyFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APutOnTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void APutOnTruck::Swap(APutOnTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APutOnTruck::InternalSwap(APutOnTruck* other) {
  using std::swap;
  swap(whnum_, other->whnum_);
  swap(truckid_, other->truckid_);
  swap(shipid_, other->shipid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APutOnTruck::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void APurchaseMore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APurchaseMore::kWhnumFieldNumber;
const int APurchaseMore::kThingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APurchaseMore::APurchaseMore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAPurchaseMore();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APurchaseMore)
}
APurchaseMore::APurchaseMore(const APurchaseMore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      things_(from.things_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  whnum_ = from.whnum_;
  // @@protoc_insertion_point(copy_constructor:APurchaseMore)
}

void APurchaseMore::SharedCtor() {
  _cached_size_ = 0;
  whnum_ = 0;
}

APurchaseMore::~APurchaseMore() {
  // @@protoc_insertion_point(destructor:APurchaseMore)
  SharedDtor();
}

void APurchaseMore::SharedDtor() {
}

void APurchaseMore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APurchaseMore::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APurchaseMore& APurchaseMore::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAPurchaseMore();
  return *internal_default_instance();
}

APurchaseMore* APurchaseMore::New(::google::protobuf::Arena* arena) const {
  APurchaseMore* n = new APurchaseMore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APurchaseMore::Clear() {
// @@protoc_insertion_point(message_clear_start:APurchaseMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  things_.Clear();
  whnum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APurchaseMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APurchaseMore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_things()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APurchaseMore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APurchaseMore)
  return false;
#undef DO_
}

void APurchaseMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APurchaseMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APurchaseMore)
}

::google::protobuf::uint8* APurchaseMore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:APurchaseMore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->things_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->things(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APurchaseMore)
  return target;
}

size_t APurchaseMore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APurchaseMore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 whnum = 1;
  if (has_whnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }
  // repeated .AProduct things = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->things_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->things(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APurchaseMore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APurchaseMore)
  GOOGLE_DCHECK_NE(&from, this);
  const APurchaseMore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APurchaseMore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APurchaseMore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APurchaseMore)
    MergeFrom(*source);
  }
}

void APurchaseMore::MergeFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APurchaseMore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  things_.MergeFrom(from.things_);
  if (from.has_whnum()) {
    set_whnum(from.whnum());
  }
}

void APurchaseMore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APurchaseMore::CopyFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APurchaseMore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APurchaseMore::Swap(APurchaseMore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APurchaseMore::InternalSwap(APurchaseMore* other) {
  using std::swap;
  things_.InternalSwap(&other->things_);
  swap(whnum_, other->whnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APurchaseMore::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ACommands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACommands::kBuyFieldNumber;
const int ACommands::kLoadFieldNumber;
const int ACommands::kTopackFieldNumber;
const int ACommands::kSimspeedFieldNumber;
const int ACommands::kDisconnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACommands::ACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsACommands();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ACommands)
}
ACommands::ACommands(const ACommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      buy_(from.buy_),
      load_(from.load_),
      topack_(from.topack_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&simspeed_, &from.simspeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:ACommands)
}

void ACommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&simspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
}

ACommands::~ACommands() {
  // @@protoc_insertion_point(destructor:ACommands)
  SharedDtor();
}

void ACommands::SharedDtor() {
}

void ACommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ACommands::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ACommands& ACommands::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsACommands();
  return *internal_default_instance();
}

ACommands* ACommands::New(::google::protobuf::Arena* arena) const {
  ACommands* n = new ACommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buy_.Clear();
  load_.Clear();
  topack_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&simspeed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&disconnect_) -
        reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ACommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore buy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_buy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APutOnTruck load = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_load()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APack topack = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_topack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 simspeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_simspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &simspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_disconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ACommands)
  return false;
#undef DO_
}

void ACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buy_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buy(static_cast<int>(i)), output);
  }

  // repeated .APutOnTruck load = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->load_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->load(static_cast<int>(i)), output);
  }

  // repeated .APack topack = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topack_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->topack(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 simspeed = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->simspeed(), output);
  }

  // optional bool disconnect = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->disconnect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ACommands)
}

::google::protobuf::uint8* ACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ACommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->buy_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->buy(static_cast<int>(i)), deterministic, target);
  }

  // repeated .APutOnTruck load = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->load_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->load(static_cast<int>(i)), deterministic, target);
  }

  // repeated .APack topack = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topack_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->topack(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 simspeed = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->simspeed(), target);
  }

  // optional bool disconnect = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->disconnect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ACommands)
  return target;
}

size_t ACommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ACommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .APurchaseMore buy = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->buy_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->buy(static_cast<int>(i)));
    }
  }

  // repeated .APutOnTruck load = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->load_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->load(static_cast<int>(i)));
    }
  }

  // repeated .APack topack = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->topack_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->topack(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 simspeed = 4;
    if (has_simspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->simspeed());
    }

    // optional bool disconnect = 5;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  const ACommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ACommands)
    MergeFrom(*source);
  }
}

void ACommands::MergeFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ACommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buy_.MergeFrom(from.buy_);
  load_.MergeFrom(from.load_);
  topack_.MergeFrom(from.topack_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      simspeed_ = from.simspeed_;
    }
    if (cached_has_bits & 0x00000002u) {
      disconnect_ = from.disconnect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACommands::CopyFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->buy())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->load())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->topack())) return false;
  return true;
}

void ACommands::Swap(ACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACommands::InternalSwap(ACommands* other) {
  using std::swap;
  buy_.InternalSwap(&other->buy_);
  load_.InternalSwap(&other->load_);
  topack_.InternalSwap(&other->topack_);
  swap(simspeed_, other->simspeed_);
  swap(disconnect_, other->disconnect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ACommands::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AResponses::kArrivedFieldNumber;
const int AResponses::kReadyFieldNumber;
const int AResponses::kLoadedFieldNumber;
const int AResponses::kErrorFieldNumber;
const int AResponses::kFinishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AResponses::AResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAResponses();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AResponses)
}
AResponses::AResponses(const AResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      arrived_(from.arrived_),
      ready_(from.ready_),
      loaded_(from.loaded_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:AResponses)
}

void AResponses::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  finished_ = false;
}

AResponses::~AResponses() {
  // @@protoc_insertion_point(destructor:AResponses)
  SharedDtor();
}

void AResponses::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AResponses::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AResponses& AResponses::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAResponses();
  return *internal_default_instance();
}

AResponses* AResponses::New(::google::protobuf::Arena* arena) const {
  AResponses* n = new AResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrived_.Clear();
  ready_.Clear();
  loaded_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore arrived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ready = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_ready())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ready())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 loaded = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24u, input, this->mutable_loaded())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_loaded())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AResponses.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool finished = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_finished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AResponses)
  return false;
#undef DO_
}

void AResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrived(static_cast<int>(i)), output);
  }

  // repeated int64 ready = 2;
  for (int i = 0, n = this->ready_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->ready(i), output);
  }

  // repeated int64 loaded = 3;
  for (int i = 0, n = this->loaded_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->loaded(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AResponses.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error(), output);
  }

  // optional bool finished = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->finished(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AResponses)
}

::google::protobuf::uint8* AResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrived_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arrived(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 ready = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->ready_, target);

  // repeated int64 loaded = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(3, this->loaded_, target);

  cached_has_bits = _has_bits_[0];
  // optional string error = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AResponses.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error(), target);
  }

  // optional bool finished = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->finished(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AResponses)
  return target;
}

size_t AResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .APurchaseMore arrived = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arrived_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrived(static_cast<int>(i)));
    }
  }

  // repeated int64 ready = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ready_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ready_size());
    total_size += data_size;
  }

  // repeated int64 loaded = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->loaded_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->loaded_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string error = 4;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

    // optional bool finished = 5;
    if (has_finished()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const AResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AResponses)
    MergeFrom(*source);
  }
}

void AResponses::MergeFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrived_.MergeFrom(from.arrived_);
  ready_.MergeFrom(from.ready_);
  loaded_.MergeFrom(from.loaded_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error();
      error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
    }
    if (cached_has_bits & 0x00000002u) {
      finished_ = from.finished_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AResponses::CopyFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  return true;
}

void AResponses::Swap(AResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AResponses::InternalSwap(AResponses* other) {
  using std::swap;
  arrived_.InternalSwap(&other->arrived_);
  ready_.InternalSwap(&other->ready_);
  loaded_.InternalSwap(&other->loaded_);
  error_.Swap(&other->error_);
  swap(finished_, other->finished_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AResponses::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AWarehouse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AWarehouse::kWidFieldNumber;
const int AWarehouse::kXFieldNumber;
const int AWarehouse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AWarehouse::AWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAWarehouse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AWarehouse)
}
AWarehouse::AWarehouse(const AWarehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wid_, &from.wid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&wid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:AWarehouse)
}

void AWarehouse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&wid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&wid_)) + sizeof(y_));
}

AWarehouse::~AWarehouse() {
  // @@protoc_insertion_point(destructor:AWarehouse)
  SharedDtor();
}

void AWarehouse::SharedDtor() {
}

void AWarehouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AWarehouse::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AWarehouse& AWarehouse::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAWarehouse();
  return *internal_default_instance();
}

AWarehouse* AWarehouse::New(::google::protobuf::Arena* arena) const {
  AWarehouse* n = new AWarehouse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:AWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&wid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&wid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AWarehouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 wid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_wid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AWarehouse)
  return false;
#undef DO_
}

void AWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AWarehouse)
}

::google::protobuf::uint8* AWarehouse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AWarehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 wid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AWarehouse)
  return target;
}

size_t AWarehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AWarehouse)
  size_t total_size = 0;

  if (has_wid()) {
    // required int32 wid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t AWarehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AWarehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 wid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const AWarehouse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AWarehouse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AWarehouse)
    MergeFrom(*source);
  }
}

void AWarehouse::MergeFrom(const AWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AWarehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      wid_ = from.wid_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AWarehouse::CopyFrom(const AWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AWarehouse::Swap(AWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AWarehouse::InternalSwap(AWarehouse* other) {
  using std::swap;
  swap(wid_, other->wid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AWarehouse::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UConnectA::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UConnectA::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UConnectA::UConnectA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsUConnectA();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UConnectA)
}
UConnectA::UConnectA(const UConnectA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:UConnectA)
}

void UConnectA::SharedCtor() {
  _cached_size_ = 0;
  worldid_ = GOOGLE_LONGLONG(0);
}

UConnectA::~UConnectA() {
  // @@protoc_insertion_point(destructor:UConnectA)
  SharedDtor();
}

void UConnectA::SharedDtor() {
}

void UConnectA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UConnectA::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UConnectA& UConnectA::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsUConnectA();
  return *internal_default_instance();
}

UConnectA* UConnectA::New(::google::protobuf::Arena* arena) const {
  UConnectA* n = new UConnectA;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UConnectA::Clear() {
// @@protoc_insertion_point(message_clear_start:UConnectA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worldid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UConnectA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UConnectA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UConnectA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UConnectA)
  return false;
#undef DO_
}

void UConnectA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UConnectA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UConnectA)
}

::google::protobuf::uint8* UConnectA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UConnectA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UConnectA)
  return target;
}

size_t UConnectA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UConnectA)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UConnectA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UConnectA)
  GOOGLE_DCHECK_NE(&from, this);
  const UConnectA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UConnectA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UConnectA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UConnectA)
    MergeFrom(*source);
  }
}

void UConnectA::MergeFrom(const UConnectA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UConnectA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_worldid()) {
    set_worldid(from.worldid());
  }
}

void UConnectA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UConnectA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UConnectA::CopyFrom(const UConnectA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UConnectA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UConnectA::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UConnectA::Swap(UConnectA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UConnectA::InternalSwap(UConnectA* other) {
  using std::swap;
  swap(worldid_, other->worldid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UConnectA::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AConnectU::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnectU::kInitwhFieldNumber;
const int AConnectU::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnectU::AConnectU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAConnectU();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnectU)
}
AConnectU::AConnectU(const AConnectU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      initwh_(from.initwh_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:AConnectU)
}

void AConnectU::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AConnectU::~AConnectU() {
  // @@protoc_insertion_point(destructor:AConnectU)
  SharedDtor();
}

void AConnectU::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AConnectU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnectU::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AConnectU& AConnectU::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAConnectU();
  return *internal_default_instance();
}

AConnectU* AConnectU::New(::google::protobuf::Arena* arena) const {
  AConnectU* n = new AConnectU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnectU::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnectU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initwh_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AConnectU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnectU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AWarehouse initwh = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_initwh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AConnectU.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnectU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnectU)
  return false;
#undef DO_
}

void AConnectU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnectU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AWarehouse initwh = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initwh_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->initwh(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnectU.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnectU)
}

::google::protobuf::uint8* AConnectU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AConnectU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AWarehouse initwh = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initwh_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->initwh(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnectU.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnectU)
  return target;
}

size_t AConnectU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AConnectU)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .AWarehouse initwh = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->initwh_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->initwh(static_cast<int>(i)));
    }
  }

  // optional string error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnectU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnectU)
  GOOGLE_DCHECK_NE(&from, this);
  const AConnectU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnectU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnectU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnectU)
    MergeFrom(*source);
  }
}

void AConnectU::MergeFrom(const AConnectU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnectU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initwh_.MergeFrom(from.initwh_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void AConnectU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnectU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnectU::CopyFrom(const AConnectU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnectU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnectU::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->initwh())) return false;
  return true;
}

void AConnectU::Swap(AConnectU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnectU::InternalSwap(AConnectU* other) {
  using std::swap;
  initwh_.InternalSwap(&other->initwh_);
  error_.Swap(&other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnectU::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AGoodInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AGoodInfo::kWhidFieldNumber;
const int AGoodInfo::kUsernameFieldNumber;
const int AGoodInfo::kXdestFieldNumber;
const int AGoodInfo::kYdestFieldNumber;
const int AGoodInfo::kOrderNumFieldNumber;
const int AGoodInfo::kGoodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AGoodInfo::AGoodInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsAGoodInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AGoodInfo)
}
AGoodInfo::AGoodInfo(const AGoodInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      good_(from.good_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&whid_, &from.whid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ydest_) -
    reinterpret_cast<char*>(&whid_)) + sizeof(ydest_));
  // @@protoc_insertion_point(copy_constructor:AGoodInfo)
}

void AGoodInfo::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&whid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ydest_) -
      reinterpret_cast<char*>(&whid_)) + sizeof(ydest_));
}

AGoodInfo::~AGoodInfo() {
  // @@protoc_insertion_point(destructor:AGoodInfo)
  SharedDtor();
}

void AGoodInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AGoodInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AGoodInfo::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AGoodInfo& AGoodInfo::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsAGoodInfo();
  return *internal_default_instance();
}

AGoodInfo* AGoodInfo::New(::google::protobuf::Arena* arena) const {
  AGoodInfo* n = new AGoodInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AGoodInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:AGoodInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  good_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&whid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ydest_) -
        reinterpret_cast<char*>(&whid_)) + sizeof(ydest_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AGoodInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AGoodInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AGoodInfo.username");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 xdest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_xdest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xdest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ydest = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_ydest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ydest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 order_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_order_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &order_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AProduct good = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_good()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AGoodInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AGoodInfo)
  return false;
#undef DO_
}

void AGoodInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AGoodInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whid(), output);
  }

  // optional string username = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AGoodInfo.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // required int32 xdest = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->xdest(), output);
  }

  // required int32 ydest = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ydest(), output);
  }

  // required int64 order_num = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->order_num(), output);
  }

  // repeated .AProduct good = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->good_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->good(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AGoodInfo)
}

::google::protobuf::uint8* AGoodInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AGoodInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 whid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whid(), target);
  }

  // optional string username = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AGoodInfo.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // required int32 xdest = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->xdest(), target);
  }

  // required int32 ydest = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ydest(), target);
  }

  // required int64 order_num = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->order_num(), target);
  }

  // repeated .AProduct good = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->good_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->good(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AGoodInfo)
  return target;
}

size_t AGoodInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AGoodInfo)
  size_t total_size = 0;

  if (has_whid()) {
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_xdest()) {
    // required int32 xdest = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xdest());
  }

  if (has_order_num()) {
    // required int64 order_num = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->order_num());
  }

  if (has_ydest()) {
    // required int32 ydest = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ydest());
  }

  return total_size;
}
size_t AGoodInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AGoodInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required int32 whid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int32 xdest = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xdest());

    // required int64 order_num = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->order_num());

    // required int32 ydest = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ydest());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AProduct good = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->good_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->good(static_cast<int>(i)));
    }
  }

  // optional string username = 2;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AGoodInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AGoodInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AGoodInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AGoodInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AGoodInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AGoodInfo)
    MergeFrom(*source);
  }
}

void AGoodInfo::MergeFrom(const AGoodInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AGoodInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  good_.MergeFrom(from.good_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000004u) {
      xdest_ = from.xdest_;
    }
    if (cached_has_bits & 0x00000008u) {
      order_num_ = from.order_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      ydest_ = from.ydest_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AGoodInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AGoodInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AGoodInfo::CopyFrom(const AGoodInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AGoodInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AGoodInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->good())) return false;
  return true;
}

void AGoodInfo::Swap(AGoodInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AGoodInfo::InternalSwap(AGoodInfo* other) {
  using std::swap;
  good_.InternalSwap(&other->good_);
  username_.Swap(&other->username_);
  swap(whid_, other->whid_);
  swap(xdest_, other->xdest_);
  swap(order_num_, other->order_num_);
  swap(ydest_, other->ydest_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AGoodInfo::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UTruckMatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UTruckMatch::kTruckidFieldNumber;
const int UTruckMatch::kGoodidFieldNumber;
const int UTruckMatch::kOrderNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UTruckMatch::UTruckMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsUTruckMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UTruckMatch)
}
UTruckMatch::UTruckMatch(const UTruckMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&goodid_, &from.goodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UTruckMatch)
}

void UTruckMatch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(truckid_));
}

UTruckMatch::~UTruckMatch() {
  // @@protoc_insertion_point(destructor:UTruckMatch)
  SharedDtor();
}

void UTruckMatch::SharedDtor() {
}

void UTruckMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UTruckMatch::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UTruckMatch& UTruckMatch::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsUTruckMatch();
  return *internal_default_instance();
}

UTruckMatch* UTruckMatch::New(::google::protobuf::Arena* arena) const {
  UTruckMatch* n = new UTruckMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UTruckMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:UTruckMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&goodid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&goodid_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UTruckMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UTruckMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 goodid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_goodid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &goodid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 order_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_order_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &order_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UTruckMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UTruckMatch)
  return false;
#undef DO_
}

void UTruckMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UTruckMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int64 goodid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->goodid(), output);
  }

  // required int64 order_num = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->order_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UTruckMatch)
}

::google::protobuf::uint8* UTruckMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UTruckMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int64 goodid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->goodid(), target);
  }

  // required int64 order_num = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->order_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UTruckMatch)
  return target;
}

size_t UTruckMatch::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UTruckMatch)
  size_t total_size = 0;

  if (has_goodid()) {
    // required int64 goodid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->goodid());
  }

  if (has_order_num()) {
    // required int64 order_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->order_num());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UTruckMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UTruckMatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 goodid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->goodid());

    // required int64 order_num = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->order_num());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UTruckMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UTruckMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const UTruckMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UTruckMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UTruckMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UTruckMatch)
    MergeFrom(*source);
  }
}

void UTruckMatch::MergeFrom(const UTruckMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UTruckMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      goodid_ = from.goodid_;
    }
    if (cached_has_bits & 0x00000002u) {
      order_num_ = from.order_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UTruckMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UTruckMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UTruckMatch::CopyFrom(const UTruckMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UTruckMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UTruckMatch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UTruckMatch::Swap(UTruckMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UTruckMatch::InternalSwap(UTruckMatch* other) {
  using std::swap;
  swap(goodid_, other->goodid_);
  swap(order_num_, other->order_num_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UTruckMatch::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UTruckInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UTruckInfo::kTruckidFieldNumber;
const int UTruckInfo::kWhidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UTruckInfo::UTruckInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsUTruckInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UTruckInfo)
}
UTruckInfo::UTruckInfo(const UTruckInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&whid_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(whid_));
  // @@protoc_insertion_point(copy_constructor:UTruckInfo)
}

void UTruckInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whid_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(whid_));
}

UTruckInfo::~UTruckInfo() {
  // @@protoc_insertion_point(destructor:UTruckInfo)
  SharedDtor();
}

void UTruckInfo::SharedDtor() {
}

void UTruckInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UTruckInfo::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UTruckInfo& UTruckInfo::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsUTruckInfo();
  return *internal_default_instance();
}

UTruckInfo* UTruckInfo::New(::google::protobuf::Arena* arena) const {
  UTruckInfo* n = new UTruckInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UTruckInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UTruckInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whid_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(whid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UTruckInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UTruckInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UTruckInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UTruckInfo)
  return false;
#undef DO_
}

void UTruckInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UTruckInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UTruckInfo)
}

::google::protobuf::uint8* UTruckInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UTruckInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UTruckInfo)
  return target;
}

size_t UTruckInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UTruckInfo)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_whid()) {
    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  return total_size;
}
size_t UTruckInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UTruckInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UTruckInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UTruckInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UTruckInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UTruckInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UTruckInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UTruckInfo)
    MergeFrom(*source);
  }
}

void UTruckInfo::MergeFrom(const UTruckInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UTruckInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UTruckInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UTruckInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UTruckInfo::CopyFrom(const UTruckInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UTruckInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UTruckInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UTruckInfo::Swap(UTruckInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UTruckInfo::InternalSwap(UTruckInfo* other) {
  using std::swap;
  swap(truckid_, other->truckid_);
  swap(whid_, other->whid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UTruckInfo::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A2UResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A2UResponses::kGoodReadyFieldNumber;
const int A2UResponses::kTruckLeaveFieldNumber;
const int A2UResponses::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A2UResponses::A2UResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsA2UResponses();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:A2UResponses)
}
A2UResponses::A2UResponses(const A2UResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      goodready_(from.goodready_),
      truckleave_(from.truckleave_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:A2UResponses)
}

void A2UResponses::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

A2UResponses::~A2UResponses() {
  // @@protoc_insertion_point(destructor:A2UResponses)
  SharedDtor();
}

void A2UResponses::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void A2UResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A2UResponses::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A2UResponses& A2UResponses::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsA2UResponses();
  return *internal_default_instance();
}

A2UResponses* A2UResponses::New(::google::protobuf::Arena* arena) const {
  A2UResponses* n = new A2UResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A2UResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:A2UResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodready_.Clear();
  truckleave_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A2UResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A2UResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AGoodInfo goodReady = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_goodready()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UTruckInfo truckLeave = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_truckleave()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "A2UResponses.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A2UResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A2UResponses)
  return false;
#undef DO_
}

void A2UResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A2UResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AGoodInfo goodReady = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goodready_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goodready(static_cast<int>(i)), output);
  }

  // repeated .UTruckInfo truckLeave = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckleave_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->truckleave(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "A2UResponses.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A2UResponses)
}

::google::protobuf::uint8* A2UResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:A2UResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AGoodInfo goodReady = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goodready_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->goodready(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UTruckInfo truckLeave = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckleave_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->truckleave(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "A2UResponses.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A2UResponses)
  return target;
}

size_t A2UResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A2UResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .AGoodInfo goodReady = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->goodready_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->goodready(static_cast<int>(i)));
    }
  }

  // repeated .UTruckInfo truckLeave = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->truckleave_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->truckleave(static_cast<int>(i)));
    }
  }

  // optional string error = 3;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A2UResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A2UResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const A2UResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A2UResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A2UResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A2UResponses)
    MergeFrom(*source);
  }
}

void A2UResponses::MergeFrom(const A2UResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A2UResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  goodready_.MergeFrom(from.goodready_);
  truckleave_.MergeFrom(from.truckleave_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void A2UResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A2UResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A2UResponses::CopyFrom(const A2UResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A2UResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A2UResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->goodready())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->truckleave())) return false;
  return true;
}

void A2UResponses::Swap(A2UResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A2UResponses::InternalSwap(A2UResponses* other) {
  using std::swap;
  goodready_.InternalSwap(&other->goodready_);
  truckleave_.InternalSwap(&other->truckleave_);
  error_.Swap(&other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A2UResponses::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void U2AResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2AResponses::kTruckArrivedFieldNumber;
const int U2AResponses::kPackageFinishedFieldNumber;
const int U2AResponses::kTruckReadyFieldNumber;
const int U2AResponses::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2AResponses::U2AResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_amazon_2eproto::InitDefaultsU2AResponses();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2AResponses)
}
U2AResponses::U2AResponses(const U2AResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      truckarrived_(from.truckarrived_),
      packagefinished_(from.packagefinished_),
      truckready_(from.truckready_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:U2AResponses)
}

void U2AResponses::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

U2AResponses::~U2AResponses() {
  // @@protoc_insertion_point(destructor:U2AResponses)
  SharedDtor();
}

void U2AResponses::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void U2AResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* U2AResponses::descriptor() {
  ::protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const U2AResponses& U2AResponses::default_instance() {
  ::protobuf_amazon_2eproto::InitDefaultsU2AResponses();
  return *internal_default_instance();
}

U2AResponses* U2AResponses::New(::google::protobuf::Arena* arena) const {
  U2AResponses* n = new U2AResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void U2AResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:U2AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  truckarrived_.Clear();
  packagefinished_.Clear();
  truckready_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool U2AResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2AResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UTruckInfo truckArrived = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_truckarrived()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 packageFinished = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_packagefinished())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_packagefinished())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UTruckMatch truckReady = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_truckready()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "U2AResponses.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2AResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2AResponses)
  return false;
#undef DO_
}

void U2AResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UTruckInfo truckArrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckarrived_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->truckarrived(static_cast<int>(i)), output);
  }

  // repeated int64 packageFinished = 2;
  for (int i = 0, n = this->packagefinished_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->packagefinished(i), output);
  }

  // repeated .UTruckMatch truckReady = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckready_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->truckready(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "U2AResponses.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2AResponses)
}

::google::protobuf::uint8* U2AResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:U2AResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UTruckInfo truckArrived = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckarrived_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->truckarrived(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 packageFinished = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->packagefinished_, target);

  // repeated .UTruckMatch truckReady = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckready_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->truckready(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "U2AResponses.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2AResponses)
  return target;
}

size_t U2AResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2AResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UTruckInfo truckArrived = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->truckarrived_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->truckarrived(static_cast<int>(i)));
    }
  }

  // repeated int64 packageFinished = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->packagefinished_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->packagefinished_size());
    total_size += data_size;
  }

  // repeated .UTruckMatch truckReady = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->truckready_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->truckready(static_cast<int>(i)));
    }
  }

  // optional string error = 4;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void U2AResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const U2AResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const U2AResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2AResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2AResponses)
    MergeFrom(*source);
  }
}

void U2AResponses::MergeFrom(const U2AResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2AResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  truckarrived_.MergeFrom(from.truckarrived_);
  packagefinished_.MergeFrom(from.packagefinished_);
  truckready_.MergeFrom(from.truckready_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void U2AResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2AResponses::CopyFrom(const U2AResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2AResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->truckarrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->truckready())) return false;
  return true;
}

void U2AResponses::Swap(U2AResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2AResponses::InternalSwap(U2AResponses* other) {
  using std::swap;
  truckarrived_.InternalSwap(&other->truckarrived_);
  packagefinished_.InternalSwap(&other->packagefinished_);
  truckready_.InternalSwap(&other->truckready_);
  error_.Swap(&other->error_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata U2AResponses::GetMetadata() const {
  protobuf_amazon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_amazon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
